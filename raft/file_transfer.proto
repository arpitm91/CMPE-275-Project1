syntax = "proto3";

package grpc;

// enum MessageType {
//     Text = 0;
//     File = 1;
// }

enum LogOperation {
    Add = 0;
    Remove = 1;
}

enum Vote {
    YES = 0;
    NO = 1;
}

// message Message {
// 	int64 id = 1;
// 	MessageType type = 2;
// 	bytes data = 3;
// 	string destination = 4;
// 	string origin = 5;
// 	int64 timestamp = 6;
// 	int64 hops = 7;
// 	int64 seqnum = 8;
// 	int64 seqmax = 9;
// }

message Ack {
	int64 id = 1;
}

// message User {
// 	string name = 1;
// }

message TableLog {
    string file_number = 1;
    string chunk_number = 2;
    string ip = 3;
    string port = 4;
    LogOperation operation = 5;    
}

message Table {
    int64 cycle_number = 1;
    string leader_ip = 2;
    string leader_port = 3;
    repeated TableLog tableLog = 4;
}

message Candidacy {
    int64 cycle_number = 1;
    string ip = 2;
    string port = 3;
    int64 log_length = 4;
}

message CandidacyResponse {
    Vote voted = 1;
    int64 cycle_number = 2;
}

service DataTransferService {

    rpc RaftHeartbit (Table) returns (Ack);
    rpc RequestVote (Candidacy) returns (CandidacyResponse);


    // rpc Send (Message) returns (Ack);
    // rpc Ping (User) returns (stream Message);    
}